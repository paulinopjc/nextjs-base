// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Text
  name         String
  email        String   @unique
  password     String
  date_added   DateTime @default(now())
  date_updated DateTime @updatedAt

  roleId String
  role   Role   @relation(fields: [roleId], references: [id])

  updatedCMS Cms[] @relation("cms_updated_by")

  @@map("users")
}

model Role {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Text
  name         String   @unique
  date_added   DateTime @default(now())
  date_updated DateTime @updatedAt

  users User[]

  @@map("roles")
}

model Cms {
  id      String @id @default(dbgenerated("gen_random_uuid()")) @db.Text
  name    String
  slug    String
  content String @db.Text // Accepts HTML content
  status String @default("draft") // New status column (e.g., 'draft', 'published', etc.)

  updatedById String // Foreign key to User
  updated_by  User   @relation("cms_updated_by", fields: [updatedById], references: [id])

  date_added   DateTime @default(now())
  date_updated DateTime @updatedAt

  @@map("cms")
}
